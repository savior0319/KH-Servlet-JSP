─────────────────────────────────────────────────────────────────────────────────────────────────

@ 서블릿의 라이프 사이클
-> 라이프 사이클은 생명 주기를 뜻함
-> 서블릿이 다른 웹 기술보다 뛰어난 점은 빠른 수행 속도에 있음
-> 타 웹 기술 (PHP, ASP 등)들은 인터프리터 방식으로 해당 페이지들 마다 서버에서
매번 해석하면서 코드를 작동 시키지만 서블릿은 첫 번째 요청인 경우에는 서블릿 클래스를
찾아 메모리에 로딩하여 인스턴스(객체)를 생성하게 됨
-> 이후 부터의 요청은 생성된 인스턴스가 메모리에 계속 남아 있게 되므로
해당 서블릿을 호출하여도 새롭게 생성되지 않고 이미 메모리에 로딩된 상태의 서블릿으로 부터
서비스 처리를 받기 때문에 수행 속도가 빠름
-> 즉, 서블릿은 호출 때 마다 새롭게 객체를 생성하는 것이 아닌 단 1번만 생성하고
이후에는 서버(톰캣)가 종료되기 전까지는 해당 객체를 계속 재활용 함
(그렇기 때문에 서블릿 코드가 변경되면 톰캣을 재시작해야 하는 불편함은 존재함)
(ASP, JSP, PHP는 서버가 가동 후에 코드가 변경되어도 서버를 재시작할 필요는 없음)

─────────────────────────────────────────────────────────────────────────────────────────────────

